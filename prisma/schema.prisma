generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  password  String
  email     String   @unique
  role      UserRole
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id          Int          @id @default(autoincrement())
  name        String
  ppc         String // Projeto Pedag√≥gico de Curso
  description String?
  disciplines Discipline[]
  references  Reference[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Discipline {
  id               Int         @id @default(autoincrement())
  name             String
  cargaHoraria     Int
  practicalHours   Int
  theoreticalHours Int
  period           Int
  course           Course      @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId         Int
  references       Reference[]
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
}

model Reference {
  id           Int           @id @default(autoincrement())
  title        String
  authors      String
  year         Int?
  edition      Int?
  publisher    String?
  type         ReferenceType
  course       Course        @relation(fields: [courseId], references: [id], onDelete: Cascade)
  courseId     Int
  discipline   Discipline    @relation(fields: [disciplineId], references: [id], onDelete: Cascade)
  disciplineId Int
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

enum UserRole {
  teacher
  bibliotecary
  admin
}

enum ReferenceType {
  mandatory
  complementary
}
